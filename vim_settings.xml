<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="/File Header.txt.ft" timestamp="1553564138271">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/RepositoryServiceTest.java" timestamp="1556441188671">
        <mark key="[" line="58" column="70" />
      </file>
      <file name="$USER_HOME$/data/功能设计/学习资料/第一期/flowable课程补充/shareniu-flowable-springboot-web/src/main/java/com/shareniu/flowable/controller/ProcessController.java" timestamp="1555982578022">
        <mark key="[" line="112" column="66" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/RuntimeTaskHistoryServiceTest.java" timestamp="1557302826772">
        <mark key="[" line="74" column="25" />
      </file>
      <file name="$USER_HOME$/data/功能设计/工作流文档/form/src/main/java/com/dzdy/form/controller/FormItemController.java" timestamp="1557382840979" />
      <file name="/a.dummy" timestamp="1556002682658">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/data/功能设计/学习资料/第一期/flowable课程补充/shareniu-flowable-springboot-web/src/main/resources/config/database/jdbc-shareniu-dev.properties" timestamp="1555583202204">
        <mark key="[" line="3" column="38" />
      </file>
      <file name="$USER_HOME$/data/code/gateway/src/main/java/com/yunzainfo/cloud/gateway/config/AuthControllerAdvice.java" timestamp="1554189703846">
        <mark key="[" line="21" column="25" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/istio/istio-svc-dpt.yaml" timestamp="1557196489366">
        <mark key="[" line="63" column="49" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/services/system/user.js" timestamp="1553670643216">
        <mark key="[" line="19" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/resources/application.properties" timestamp="1555913980572">
        <mark key="[" line="12" column="23" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/java/flowable/modeler/config/ProcessEngineConfig.java" timestamp="1555486641016">
        <mark key="[" line="36" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/web/CourseController.java" timestamp="1553221667602">
        <mark key="[" line="54" column="50" />
      </file>
      <file name="$USER_HOME$/data/code/flow-modeler-sduty/src/main/resources/application-dev.properties" timestamp="1555570169734">
        <mark key="[" line="3" column="35" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/java/com/yunzainfo/cloud/flowable/modeler/config/IdmApiServlet.java" timestamp="1555573873581">
        <mark key="[" line="17" column="3" />
      </file>
      <file name="$USER_HOME$/data/功能设计/工作流文档/form/src/main/webapp/WEB-INF/statics/js/fx_pc_all.min.js" timestamp="1557383122873" />
      <file name="$USER_HOME$/data/code/newdemo/jpa/jpa-core/pom.xml" timestamp="1557108651523">
        <mark key="[" line="128" column="26" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/service/impl/PanelServerImpl.java" timestamp="1553582242294">
        <mark key="[" line="58" column="19" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/resources/flowable.cfg.xml" timestamp="1556248512685">
        <mark key="[" line="23" column="55" />
      </file>
      <file name="$USER_HOME$/data/功能设计/学习资料/Flowable第三期资料/shareniu-flowable-study/src/main/java/com/shareniu/v6/ch4/ShareniuJumpCmd.java" timestamp="1556504375246">
        <mark key="[" line="41" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/components/ServiceMenu/index.less" timestamp="1554343548647">
        <mark key="[" line="40" column="12" />
      </file>
      <file name="$USER_HOME$/data/code/sailor/src/main/resources/application-local.properties" timestamp="1554704054813">
        <mark key="[" line="17" column="55" />
      </file>
      <file name="$USER_HOME$/data/code/flowable-engine/modules/flowable-ui-modeler/flowable-ui-modeler-app/src/main/resources/flowable-default.properties" timestamp="1555407326601">
        <mark key="[" line="0" column="15" />
      </file>
      <file name="$USER_HOME$/data/code/form/devServer.js" timestamp="1557279853061">
        <mark key="[" line="4" column="61" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/sql/view.sql" timestamp="1556011505230">
        <mark key="[" line="25" column="34" />
      </file>
      <file name="$USER_HOME$/data/code/flowable-engine/modules/flowable-ui-idm/flowable-ui-idm-app/src/main/resources/flowable-default.properties" timestamp="1555406427230">
        <mark key="[" line="47" column="48" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/entity/Course.java" timestamp="1554710962962">
        <mark key="[" line="26" column="18" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/pom.xml" timestamp="1554711470796">
        <mark key="[" line="156" column="21" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/social/qq/api/impl/QQImpl.java" timestamp="1553569167808">
        <mark key="[" line="67" column="55" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/XcGroupTaskListener.java" timestamp="1556013556836">
        <mark key="[" line="16" column="6" />
      </file>
      <file name="$USER_HOME$/data/code/sailor/Dockerfile" timestamp="1557133730144">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/utils/utils.js" timestamp="1557224307359">
        <mark key="[" line="351" column="5" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/entity/core/PanelLayout.java" timestamp="1553594229896">
        <mark key="[" line="17" column="3" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/java/com/yunzainfo/cloud/flowable/modeler/test/GroovyTask.java" timestamp="1556172196639">
        <mark key="[" line="12" column="23" />
      </file>
      <file name="$USER_HOME$/data/功能设计/工作流文档/form/doc/db/init.sql" timestamp="1557382781419" />
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/service/SortItemService.java" timestamp="1553222902363">
        <mark key="[" line="19" column="36" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/web/BaseAuthrityController.java" timestamp="1553563746667">
        <mark key="[" line="44" column="94" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/src/main/resources/application-local.yml" timestamp="1554188132813">
        <mark key="[" line="102" column="34" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/pages/Task/CardList.js" timestamp="1555386268082">
        <mark key="[" line="294" column="87" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/pom.xml" timestamp="1554260576074">
        <mark key="[" line="223" column="26" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/resources/leave.bpmn" timestamp="1555915232997">
        <mark key="[" line="12" column="34" />
      </file>
      <file name="$USER_HOME$/data/功能设计/工作流文档/form/src/main/resources/logback.xml" timestamp="1557382001052">
        <mark key="[" line="71" column="19" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/resources/application.yaml" timestamp="1554712631717">
        <mark key="[" line="36" column="15" />
      </file>
      <file name="$USER_HOME$/data/code/plugins-pushserver/src/main/resources/static/ws.html" timestamp="1553753178397">
        <mark key="[" line="41" column="43" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/auth/security/SecurityUtils.java" timestamp="1553740257624">
        <mark key="[" line="68" column="11" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/entity/Score.java" timestamp="1554711050091">
        <mark key="[" line="22" column="18" />
      </file>
      <file name="$USER_HOME$/data/code/sailor/pom.xml" timestamp="1557131241413">
        <mark key="[" line="153" column="26" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/layouts/LoadingPage.js" timestamp="1556623680083">
        <mark key="[" line="90" column="18" />
      </file>
      <file name="$USER_HOME$/data/功能设计/工作流文档/form/src/main/webapp/index.jsp" timestamp="1557301574261" />
      <file name="$USER_HOME$/data/功能设计/学习资料/第一期/flowable课程补充/shareniu-flowable-springboot-web/src/main/resources/sql/dataBase.xml" timestamp="1555639483613">
        <mark key="[" line="15" column="43" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/entity/core/Panel.java" timestamp="1553594186919">
        <mark key="[" line="36" column="25" />
      </file>
      <file name="/HTML File.txt.ft" timestamp="1553564125772">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/k8s-config/limit.yaml" timestamp="1557113522634">
        <mark key="[" line="8" column="16" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/repository/CourseRepository.java" timestamp="1553221917468">
        <mark key="[" line="19" column="44" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/resources/组任务变量.bpmn20.xml" timestamp="1556012942638">
        <mark key="[" line="5" column="102" />
      </file>
      <file name="$USER_HOME$/data/code/newdemo/jpa/jpa-core/Dockerfile" timestamp="1557138880662">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="." line="4" column="0" />
        <mark key="^" line="0" column="3" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/java/com/yunzainfo/cloud/flowable/modeler/web/RemoteAccountController.java" timestamp="1555661875794">
        <mark key="[" line="31" column="38" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/entity/School.java" timestamp="1554711094729">
        <mark key="[" line="32" column="7" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/repository/PanelLayoutRepository.java" timestamp="1553594262328">
        <mark key="[" line="13" column="66" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/service/impl/ScoreServiceImpl.java" timestamp="1553222332694">
        <mark key="[" line="150" column="40" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/file-center/file-core/pom.xml" timestamp="1557132976187">
        <mark key="[" line="110" column="26" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/resources/static/scripts/configuration/url-config.js" timestamp="1555576286105">
        <mark key="[" line="23" column="46" />
      </file>
      <file name="$USER_HOME$/data/功能设计/工作流文档/form/README.md" timestamp="1557383159370" />
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/z1/flowable.java" timestamp="1555661882523">
        <mark key="[" line="14" column="3" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/java/com/yunzainfo/cloud/flowable/modeler/config/ProcessEngineConfig.java" timestamp="1556589611901">
        <mark key="[" line="74" column="105" />
      </file>
      <file name="$USER_HOME$/data/code/gateway/src/main/resources/application.properties" timestamp="1554106013788">
        <mark key="[" line="1" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/utils/Path.js" timestamp="1557365317293">
        <mark key="[" line="2" column="53" />
        <mark key="]" line="2" column="49" />
        <mark key="^" line="2" column="49" />
        <mark key="." line="2" column="49" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/mapper/ScoreMapper.java" timestamp="1553223060621">
        <mark key="[" line="17" column="92" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/SeparateAdmissionsApplication.java" timestamp="1554713604332">
        <mark key="[" line="49" column="73" />
      </file>
      <file name="$USER_HOME$/data/code/sailor/istio/istio-svc-dpt.yaml" timestamp="1557134438908">
        <mark key="[" line="71" column="26" />
        <mark key="]" line="44" column="11" />
        <mark key="." line="44" column="11" />
        <mark key="^" line="44" column="11" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/java/com/yunzainfo/cloud/flowable/modeler/FlowableModelerApplication.java" timestamp="1556520719369">
        <mark key="[" line="8" column="120" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/pom.xml" timestamp="1556172028235">
        <mark key="[" line="71" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/components/Panel/IfamePanel.js" timestamp="1557051509557">
        <mark key="[" line="18" column="35" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/repository/BaseUserRepository.java" timestamp="1553841780562">
        <mark key="[" line="21" column="55" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/service/impl/SortItemServiceImpl.java" timestamp="1553222623668">
        <mark key="[" line="97" column="127" />
      </file>
      <file name="$USER_HOME$/data/功能设计/工作流文档/form/src/main/webapp/WEB-INF/view/form_info.jsp" timestamp="1557382442300" />
      <file name="$USER_HOME$/data/功能设计/工作流文档/form/src/main/webapp/WEB-INF/statics/js/form.js" timestamp="1557382956076" />
      <file name="$USER_HOME$/data/code/cloud/auth-center/config/application-dev.properties" timestamp="1554187907886">
        <mark key="[" line="46" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/models/project.js" timestamp="1553755063361">
        <mark key="[" line="12" column="52" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/pages/List/CardList.js" timestamp="1555066482549">
        <mark key="[" line="2" column="34" />
      </file>
      <file name="$USER_HOME$/data/code/kubernetes-client/kubernetes-model/pom.xml" timestamp="1555379969417">
        <mark key="[" line="258" column="13" />
      </file>
      <file name="$USER_HOME$/data/code/newdemo/jpa/jpa-core/src/main/resources/bootstrap.properties" timestamp="1553654258152">
        <mark key="[" line="0" column="66" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/resources/stencilset_bpmn.json" timestamp="1555489962592">
        <mark key="[" line="1351" column="23" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/entity/TestType.java" timestamp="1554711065058">
        <mark key="[" line="27" column="17" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/ServerTaskClass.java" timestamp="1556099161388">
        <mark key="[" line="14" column="28" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/models/global.js" timestamp="1553755348589">
        <mark key="[" line="14" column="43" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/service/PanelService.java" timestamp="1553582210981">
        <mark key="[" line="15" column="58" />
      </file>
      <file name="/ActionScript File Header.txt.ft" timestamp="1553564125857">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/data/功能设计/工作流文档/form/src/main/java/com/dzdy/form/controller/FormInfoController.java" timestamp="1557382094998" />
      <file name="$USER_HOME$/data/code/grafana/public/app/features/dashboard/dashgrid/PanelHeader/PanelHeader.tsx" timestamp="1553138127528">
        <mark key="[" line="12" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/entity/SignInfo.java" timestamp="1554711054950">
        <mark key="[" line="27" column="18" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/java/com/yunzainfo/cloud/flowable/modeler/web/RemoteAccountResource.java" timestamp="1555487156194">
        <mark key="[" line="21" column="3" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/entity/core/DeptUserKey.java" timestamp="1554184945898">
        <mark key="[" line="22" column="18" />
      </file>
      <file name="$USER_HOME$/data/功能设计/工作流文档/form/src/main/resources/properties/config.properties" timestamp="1557301320082">
        <mark key="[" line="3" column="25" />
      </file>
      <file name="$USER_HOME$/data/code/kubernetes-client/kubernetes-model/kubernetes-model/pom.xml" timestamp="1555379953775">
        <mark key="[" line="229" column="21" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/config/ResourceServerConfiguration.java" timestamp="1554186426726">
        <mark key="[" line="46" column="29" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/config/SecurityServerConfig.java" timestamp="1554711654909">
        <mark key="[" line="69" column="29" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/pages/Task/StepForm/Step1.js" timestamp="1555379741643">
        <mark key="[" line="88" column="50" />
      </file>
      <file name="$USER_HOME$/data/功能设计/工作流文档/form/src/main/webapp/WEB-INF/statics/js/1.js" timestamp="1557383790592">
        <mark key="[" line="20916" column="0" />
        <mark key="]" line="20916" column="0" />
        <mark key="." line="20916" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/service/impl/CourseServiceImpl.java" timestamp="1553221969588">
        <mark key="[" line="60" column="84" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/pages/Dashboard/ShowCaseLayout.js" timestamp="1553067432451">
        <mark key="[" line="73" column="8" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/resources/角色组任务.bpmn20.xml" timestamp="1556092160624">
        <mark key="[" line="5" column="90" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/resources/mapper/ScoreMapper.xml" timestamp="1553223070727">
        <mark key="[" line="28" column="74" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/pages/Istio/config.ts" timestamp="1553153255096">
        <mark key="[" line="1" column="36" />
      </file>
      <file name="$USER_HOME$/data/功能设计/学习资料/Flowable第三期资料/shareniu-flowable-study/src/main/java/com/shareniu/v6/ch10/cmd/GetProcessCmd.java" timestamp="1556527121141">
        <mark key="[" line="19" column="59" />
      </file>
      <file name="$USER_HOME$/data/code/flowable-engine/modules/flowable-app-rest/pom.xml" timestamp="1555480639199">
        <mark key="[" line="16" column="53" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/resources/定时器任务.bpmn20.xml" timestamp="1556244947649">
        <mark key="[" line="2" column="18" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/java/com/yunzainfo/cloud/flowable/modeler/config/IdmProcessEngineConfiguration.java" timestamp="1555912249856">
        <mark key="[" line="16" column="42" />
      </file>
      <file name="$USER_HOME$/data/功能设计/工作流文档/form/src/main/webapp/WEB-INF/view/common/tagPage.jsp" timestamp="1557382379951" />
      <file name="$USER_HOME$/data/code/cloud/file-center/istio/istio-svc-dpt.yaml" timestamp="1557132987345">
        <mark key="[" line="82" column="144" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/entity/SortItem.java" timestamp="1554711059319">
        <mark key="[" line="27" column="24" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/XcProcessInstanceHelper.java" timestamp="1556004576783">
        <mark key="[" line="16" column="37" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/entity/core/SystemLog.java" timestamp="1554693373846">
        <mark key="[" line="33" column="25" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/resources/static/styles/common/style.css" timestamp="1555641618233">
        <mark key="[" line="997" column="15" />
      </file>
      <file name="/Dummy.txt" timestamp="1557225225887">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/XcSingleTaskListener.java" timestamp="1556264743892">
        <mark key="[" line="13" column="33" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/resources/juel脚本任务.bpmn20.xml" timestamp="1556172708668">
        <mark key="[" line="5" column="98" />
      </file>
      <file name="$USER_HOME$/data/code/flowable-engine/modules/flowable-app-rest/src/main/resources/flowable-default.properties" timestamp="1555482450193">
        <mark key="[" line="0" column="15" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/pages/Panel/Panel.less" timestamp="1553668382048">
        <mark key="[" line="17" column="27" />
      </file>
      <file name="$USER_HOME$/data/code/separateadmissions/src/main/java/com/yunzainfo/separateadmissions/repository/ScoreRepository.java" timestamp="1553222297609">
        <mark key="[" line="30" column="34" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/resources/多实例.bpmn20.xml" timestamp="1556505814854">
        <mark key="[" line="24" column="49" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/defaultSettings.js" timestamp="1557365347045">
        <mark key="[" line="18" column="19" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/service/PanelLayoutService.java" timestamp="1553594285957">
        <mark key="[" line="16" column="64" />
      </file>
      <file name="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/resources/组任务监听器指定人.bpmn20.xml" timestamp="1556013577853">
        <mark key="[" line="2" column="24" />
      </file>
      <file name="$USER_HOME$/data/功能设计/学习资料/第一期/flowable课程补充/shareniu-flowable-springboot-web/src/main/resources/sql/generatorConfig-shareniu.xml" timestamp="1555583110884">
        <mark key="[" line="17" column="65" />
      </file>
      <file name="/fragment.java" timestamp="1556504633032">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/components/Panel/Panel.less" timestamp="1557051111652">
        <mark key="[" line="12" column="21" />
      </file>
    </filemarks>
    <jumps>
      <jump line="976" column="10" filename="$USER_HOME$/data/code/v2/ant-design-pro/src/routes/SystemSetting/UserInfo.js" />
      <jump line="101" column="6" filename="$USER_HOME$/data/code/v2/ant-design-pro/src/routes/SystemSetting/UserInfo.js" />
      <jump line="540" column="15" filename="$USER_HOME$/data/code/v2/ant-design-pro/src/routes/SystemSetting/UserInfo.js" />
      <jump line="89" column="28" filename="$USER_HOME$/data/code/v2/ant-design-pro/src/models/user.js" />
      <jump line="57" column="19" filename="$USER_HOME$/data/code/v2/ant-design-pro/src/routes/SystemSetting/AuthDrawer.js" />
      <jump line="962" column="9" filename="$USER_HOME$/data/code/v2/ant-design-pro/src/routes/SystemSetting/UserInfo.js" />
      <jump line="149" column="18" filename="$USER_HOME$/data/code/v2/ant-design-pro/src/routes/SystemSetting/UserInfo.js" />
      <jump line="22" column="0" filename="$USER_HOME$/data/code/online-classroom/online-classroom-core/123" />
      <jump line="0" column="0" filename="$USER_HOME$/data/code/online-classroom/online-classroom-core/123" />
      <jump line="14" column="0" filename="$USER_HOME$/data/code/v2/ant-design-pro/src/models/dept.js" />
      <jump line="215" column="18" filename="$USER_HOME$/data/code/v2/ant-design-pro/src/routes/SystemSetting/Dept.js" />
      <jump line="46" column="42" filename="$USER_HOME$/data/code/react-auth/src/models/user.js" />
      <jump line="52" column="17" filename="$USER_HOME$/data/code/react-auth/src/components/ServiceMenu/index.js" />
      <jump line="408" column="6" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="110" column="14" filename="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/web/BaseRoleController.java" />
      <jump line="43" column="19" filename="$USER_HOME$/data/code/react-auth/src/models/role.js" />
      <jump line="44" column="4" filename="$USER_HOME$/data/code/react-auth/src/models/role.js" />
      <jump line="46" column="13" filename="$USER_HOME$/data/code/react-auth/src/models/role.js" />
      <jump line="20" column="12" filename="$USER_HOME$/data/code/react-auth/src/models/role.js" />
      <jump line="371" column="20" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="384" column="16" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="436" column="27" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="387" column="20" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="548" column="2" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="536" column="14" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="22" column="1" filename="$USER_HOME$/data/code/react-auth/src/components/SiderMenu/BaseMenu.js" />
      <jump line="93" column="103" filename="$USER_HOME$/webapps/convert/src/main/java/com/yunzai/convert/web/ConvertController.java" />
      <jump line="29" column="12" filename="$USER_HOME$/webapps/convert/src/main/java/com/yunzai/convert/web/Up.java" />
      <jump line="117" column="27" filename="$USER_HOME$/data/code/plugins-notice/notice-web/src/main/webapp/resources/js/forworkflow/notice/NoticeFormWin.js" />
      <jump line="158" column="29" filename="$USER_HOME$/data/code/online-classroom/online-classroom-core/src/main/java/com/yunzainfo/oa/onlineclassroom/service/impl/HomeworkTeaServiceImpl.java" />
      <jump line="185" column="58" filename="$USER_HOME$/data/code/online-classroom/online-classroom-core/src/test/java/com/yunzai/test/AttTest.java" />
      <jump line="215" column="17" filename="$USER_HOME$/data/code/online-classroom/online-classroom-core/src/test/java/com/yunzai/test/AttTest.java" />
      <jump line="5" column="45" filename="$USER_HOME$/webapps/plugins-resource/resourcec-impl/src/main/resources/sqlMap/oracle/CourseTrainingMapper.xml" />
      <jump line="11" column="65" filename="$USER_HOME$/webapps/plugins-resource/resourcec-impl/src/main/resources/sqlMap/oracle/MajorTeacherMapper.xml" />
      <jump line="802" column="76" filename="$USER_HOME$/data/code/online-classroom/online-classroom-core/src/main/java/com/yunzainfo/oa/onlineclassroom/service/impl/BaseScheduleServiceImpl.java" />
      <jump line="661" column="61" filename="$USER_HOME$/data/code/online-classroom/online-classroom-core/src/main/java/com/yunzainfo/oa/onlineclassroom/service/impl/BaseScheduleServiceImpl.java" />
      <jump line="35" column="21" filename="$USER_HOME$/data/code/video-library/src/main/java/com/yunzainfo/cloud/vlib/entity/FileStorage.java" />
      <jump line="49" column="30" filename="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/config/YunzaiFeignConfiguration.java" />
      <jump line="41" column="4" filename="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/config/YunzaiRedisTokenStore.java" />
      <jump line="192" column="4" filename="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/config/YunzaiRedisTokenStore.java" />
      <jump line="284" column="54" filename="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/config/YunzaiRedisTokenStore.java" />
      <jump line="88" column="4" filename="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/util/AspectUtil.java" />
      <jump line="84" column="35" filename="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/util/AspectUtil.java" />
      <jump line="20" column="21" filename="$USER_HOME$/data/code/react-auth/src/models/user.js" />
      <jump line="59" column="18" filename="$USER_HOME$/data/code/react-auth/src/pages/Video/Me.js" />
      <jump line="671" column="27" filename="$USER_HOME$/data/code/react-auth/src/pages/Video/Me.js" />
      <jump line="149" column="34" filename="$USER_HOME$/data/code/react-auth/src/pages/Video/Me.js" />
      <jump line="172" column="52" filename="$USER_HOME$/data/code/video-library/src/main/java/com/yunzainfo/cloud/vlib/service/impl/AliyunFileServiceImpl.java" />
      <jump line="449" column="31" filename="$USER_HOME$/data/code/react-auth/src/pages/Video/Admin.js" />
      <jump line="10" column="0" filename="$USER_HOME$/data/code/react-auth/src/services/video/admin.js" />
      <jump line="64" column="22" filename="$USER_HOME$/data/code/react-auth/src/pages/Video/Admin.js" />
      <jump line="23" column="17" filename="$USER_HOME$/data/code/video-library/src/main/java/com/yunzainfo/cloud/vlib/repository/DeleteCallRepository.java" />
      <jump line="72" column="49" filename="$USER_HOME$/data/code/video-library/src/main/java/com/yunzainfo/cloud/vlib/service/FileService.java" />
      <jump line="67" column="79" filename="$USER_HOME$/data/code/video-library/src/main/java/com/yunzainfo/cloud/vlib/web/FileAppController.java" />
      <jump line="350" column="28" filename="$USER_HOME$/data/code/react-auth/src/pages/Base/Client.js" />
      <jump line="71" column="8" filename="$USER_HOME$/data/code/react-auth/src/pages/Base/Client.js" />
      <jump line="329" column="16" filename="$USER_HOME$/data/code/react-auth/src/pages/Istio/Pods.js" />
      <jump line="76" column="21" filename="$USER_HOME$/data/code/react-auth/src/pages/Istio/Pods.js" />
      <jump line="68" column="46" filename="$USER_HOME$/data/code/sailor/src/test/java/PromeqlTest.java" />
      <jump line="222" column="15" filename="$USER_HOME$/data/code/react-auth/src/pages/Istio/Panel.js" />
      <jump line="235" column="14" filename="$USER_HOME$/data/code/react-auth/src/pages/Istio/Panel.js" />
      <jump line="50" column="38" filename="$USER_HOME$/data/code/react-auth/src/pages/Istio/Panel.js" />
      <jump line="326" column="15" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/RoleGroup.js" />
      <jump line="332" column="2" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/RoleGroup.js" />
      <jump line="318" column="22" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/RoleGroup.js" />
      <jump line="822" column="10" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/RoleGroup.js" />
      <jump line="774" column="27" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="775" column="0" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="525" column="20" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="25" column="51" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="781" column="28" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="30" column="9" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="28" column="56" filename="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/service/impl/RoleUserDeptServiceImpl.java" />
      <jump line="13" column="0" filename="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/service/impl/RoleUserDeptServiceImpl.java" />
      <jump line="269" column="1" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="575" column="29" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="214" column="26" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="35" column="29" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="24" column="0" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="8" column="2" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="0" column="0" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="104" column="32" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="217" column="58" filename="$USER_HOME$/data/code/Sche/src/main/java/com/xucheng/schedule/timetable/Timetable.java" />
      <jump line="102" column="121" filename="$USER_HOME$/data/code/Sche/src/main/java/com/xucheng/schedule/web/UserController.java" />
      <jump line="114" column="69" filename="$USER_HOME$/data/code/react-auth/src/pages/Panel/ChartPanel.js" />
      <jump line="60" column="19" filename="$USER_HOME$/data/code/react-auth/src/pages/Base/Panel.js" />
      <jump line="79" column="16" filename="$USER_HOME$/data/code/react-auth/src/layouts/LoadingPage.js" />
      <jump line="238" column="25" filename="$USER_HOME$/data/code/react-auth/src/pages/Istio/Panel.js" />
      <jump line="154" column="19" filename="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/service/impl/BaseRoleServiceImpl.java" />
      <jump line="48" column="23" filename="$USER_HOME$/data/code/react-auth/src/pages/Task/CardList.js" />
      <jump line="43" column="24" filename="$USER_HOME$/data/code/react-auth/src/pages/Task/CardList.js" />
      <jump line="70" column="35" filename="$USER_HOME$/data/code/react-auth/src/pages/Task/CardList.js" />
      <jump line="102" column="3" filename="$USER_HOME$/data/code/react-auth/src/pages/Task/History.js" />
      <jump line="8" column="22" filename="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/java/flowable/modeler/FlowableModelerApplication.java" />
      <jump line="646" column="36" filename="$MAVEN_REPOSITORY$/org/flowable/flowable-engine/6.4.1/flowable-engine-6.4.1.jar!/org/flowable/engine/impl/cfg/ProcessEngineConfigurationImpl.class" />
      <jump line="20" column="70" filename="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/CeleteProcessInstanceCacadeCmd.java" />
      <jump line="7" column="0" filename="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/CeleteProcessInstanceCacadeCmd.java" />
      <jump line="317" column="3" filename="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/RuntimeTaskHistoryServiceTest.java" />
      <jump line="332" column="5" filename="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/RuntimeTaskHistoryServiceTest.java" />
      <jump line="276" column="20" filename="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/TaskGatewayServiceTest.java" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text>{&quot;name&quot;:&quot;张三&quot;,&quot;sex&quot;:18}</text>
      </register>
      <register name="c" type="4">
        <text>msg</text>
      </register>
      <register name="d" type="4">
        <text />
      </register>
      <register name="*" type="4">
        <text />
      </register>
      <register name="-" type="4">
        <text>opt</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDwiXD4=</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAKICAgICAgICBpZihwcm9jZXNzSW5zdGFuY2U9PW51bGwpewogICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oIuW3sue7j+e7k+adnyIpOwogICAgICAgIH1lbHNlewogICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oIuato+WcqOi/kOihjCIpOwogICAgICAgIH0K</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="q" type="4">
        <text />
      </register>
      <register name="2" type="2">
        <text encoding="base64">UlVOIG1rZGlyIC9vcHQvc2V0dGluZ3MK</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">UlVOIGNobW9kIDc3NyAvb3B0L3NldHRpbmdzCg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">UlVOIGVjaG8gJ2Vudj1kZXYnID4+IC9vcHQvc2V0dGluZ3Mvc2VydmVyLnByb3BlcnRpZXMK</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">UlVOIG1rZGlyIC9vcHQvc2V0dGluZ3MK</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">UlVOIGNobW9kIDc3NyAvb3B0L3NldHRpbmdzCg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">UlVOIG1rZGlyIC9vcHQvc2V0dGluZ3MK</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">UlVOIGNobW9kIDc3NyAvb3B0L3NldHRpbmdzCg==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">UlVOIG1rZGlyIC9vcHQvc2V0dGluZ3MK</text>
      </register>
      <register name=":" type="4">
        <text>290</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDwiXD4=</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDwiXD4=</last-pattern>
      <last-dir>-1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>state</entry>
        <entry>render</entry>
        <entry encoding="base64">XDxjb21wbGV0ZVw+</entry>
        <entry encoding="base64">XDwiXD4=</entry>
      </history-search>
      <history-cmd>
        <entry>mark</entry>
        <entry>marks</entry>
        <entry>action SearchEverywhere</entry>
        <entry>w</entry>
        <entry>600</entry>
        <entry>wq</entry>
        <entry>54</entry>
        <entry>74</entry>
        <entry>582</entry>
        <entry>action Find</entry>
        <entry>290</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed L</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
    </shortcut-conflicts>
    <editor>
      <key-repeat enabled="true" />
    </editor>
  </component>
</application>