<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/data/code/react-auth/src/utils/http.js" timestamp="1561364999316">
        <mark key="[" line="105" column="36" />
      </file>
      <file name="$USER_HOME$/data/code/flowengine/flowable-engine/flowable/src/test/java/com/yunzainfo/cloud/flowable/test/ServiceTest.java" timestamp="1561372103910">
        <mark key="[" line="72" column="5" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/services/system/process.js" timestamp="1561430811365">
        <mark key="[" line="26" column="49" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/pages/Flow/FlowSetting.js" timestamp="1561604893015">
        <mark key="'" line="528" column="80" />
        <mark key="[" line="331" column="24" />
        <mark key="]" line="331" column="24" />
        <mark key="." line="331" column="24" />
        <mark key="^" line="317" column="11" />
      </file>
      <file name="$MAVEN_REPOSITORY$/org/springframework/spring-context/5.0.7.RELEASE/spring-context-5.0.7.RELEASE-sources.jar!/org/springframework/cache/interceptor/CacheAspectSupport.java" timestamp="1561540334240" />
      <file name="$USER_HOME$/data/code/react-auth/src/services/system/dept.js" timestamp="1561600113915" />
      <file name="$MAVEN_REPOSITORY$/org/flowable/flowable-spring-boot-autoconfigure/6.4.1/flowable-spring-boot-autoconfigure-6.4.1.jar!/org/flowable/spring/boot/dmn/FlowableDmnProperties.class" timestamp="1561543102132" />
      <file name="$USER_HOME$/data/code/flowengine/flowable-engine/flowable/src/main/resources/application-local.yml" timestamp="1561545642629">
        <mark key="[" line="2" column="1" />
        <mark key="]" line="3" column="0" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/flowengine/flowable-engine/flowable/src/main/java/com/yunzainfo/cloud/flowable/service/impl/ProcessServiceImpl.java" timestamp="1561519391184">
        <mark key="[" line="172" column="17" />
        <mark key="]" line="172" column="3" />
        <mark key="." line="172" column="17" />
      </file>
      <file name="$USER_HOME$/data/code/flowengine/flowable-engine/flowable/src/main/resources/application-local.properties" timestamp="1561543525115">
        <mark key="[" line="36" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/pages/Sys/UserInfo.js" timestamp="1561600289104" />
      <file name="$MAVEN_REPOSITORY$/org/flowable/flowable-spring-boot-autoconfigure/6.4.1/flowable-spring-boot-autoconfigure-6.4.1.jar!/org/flowable/spring/boot/FlowableProperties.class" timestamp="1561544149523" />
      <file name="$USER_HOME$/data/code/react-auth/src/models/design.js" timestamp="1561600597864">
        <mark key="[" line="135" column="23" />
        <mark key="]" line="135" column="23" />
        <mark key="." line="135" column="23" />
        <mark key="^" line="86" column="7" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/pages/FormBuilder/Editor/BasicEditor.jsx" timestamp="1561513864062" />
      <file name="$USER_HOME$/data/code/react-auth/src/pages/Flow/FormPermissions.js" timestamp="1561515107153">
        <mark key="[" line="74" column="57" />
        <mark key="]" line="74" column="57" />
        <mark key="." line="74" column="57" />
        <mark key="^" line="78" column="9" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/components/NoticeIcon/NoticeList.js" timestamp="1561538791404" />
      <file name="$USER_HOME$/data/code/react-auth/src/pages/Flow/FlowDesign.js" timestamp="1561532202838">
        <mark key="[" line="399" column="48" />
        <mark key="]" line="399" column="48" />
        <mark key="." line="399" column="48" />
        <mark key="^" line="373" column="2" />
      </file>
      <file name="$USER_HOME$/data/code/flowengine/flowable-engine/flowable/src/test/java/com/yunzainfo/cloud/flowable/test/ShareniuMuliInstanceJump.java" timestamp="1561348236721">
        <mark key="[" line="67" column="80" />
      </file>
      <file name="$MAVEN_REPOSITORY$/org/springframework/spring-context/5.0.7.RELEASE/spring-context-5.0.7.RELEASE-sources.jar!/org/springframework/cache/annotation/Cacheable.java" timestamp="1561540093906" />
      <file name="$USER_HOME$/data/code/react-auth/src/services/system/role.js" timestamp="1561531933129" />
      <file name="$USER_HOME$/data/code/newdemo/jpa/jpa-core/src/test/java/StudentTest.java" timestamp="1561367916549">
        <mark key="[" line="24" column="35" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/pages/Flow/UsersSelect.js" timestamp="1561604040274">
        <mark key="[" line="85" column="7" />
        <mark key="]" line="85" column="7" />
        <mark key="." line="85" column="7" />
        <mark key="^" line="17" column="0" />
      </file>
      <file name="$USER_HOME$/data/code/react-auth/src/pages/Flow/FlowDesign.less" timestamp="1561369855855">
        <mark key="[" line="6" column="24" />
      </file>
      <file name="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/service/impl/BaseMenuServiceImpl.java" timestamp="1561540209878">
        <mark key="[" line="107" column="8" />
        <mark key="]" line="107" column="8" />
        <mark key="." line="107" column="8" />
      </file>
      <file name="$MAVEN_REPOSITORY$/org/flowable/flowable-spring-boot-autoconfigure/6.4.1/flowable-spring-boot-autoconfigure-6.4.1.jar!/org/flowable/spring/boot/AbstractEngineAutoConfiguration.class" timestamp="1561544556909" />
      <file name="$USER_HOME$/data/code/cloud/file-center/file-core/src/main/resources/application-local.yml" timestamp="1561543567952">
        <mark key="[" line="56" column="93" />
      </file>
      <file name="$USER_HOME$/data/code/flowengine/flowable-engine/flowable/src/main/java/com/yunzainfo/cloud/flowable/config/ProcessEngineConfig.java" timestamp="1561543394868">
        <mark key="[" line="81" column="64" />
      </file>
    </filemarks>
    <jumps>
      <jump line="46" column="42" filename="$USER_HOME$/data/code/react-auth/src/models/user.js" />
      <jump line="52" column="17" filename="$USER_HOME$/data/code/react-auth/src/components/ServiceMenu/index.js" />
      <jump line="408" column="6" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="110" column="14" filename="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/web/BaseRoleController.java" />
      <jump line="43" column="19" filename="$USER_HOME$/data/code/react-auth/src/models/role.js" />
      <jump line="44" column="4" filename="$USER_HOME$/data/code/react-auth/src/models/role.js" />
      <jump line="46" column="13" filename="$USER_HOME$/data/code/react-auth/src/models/role.js" />
      <jump line="20" column="12" filename="$USER_HOME$/data/code/react-auth/src/models/role.js" />
      <jump line="371" column="20" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="384" column="16" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="436" column="27" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="387" column="20" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="548" column="2" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="536" column="14" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="22" column="1" filename="$USER_HOME$/data/code/react-auth/src/components/SiderMenu/BaseMenu.js" />
      <jump line="93" column="103" filename="$USER_HOME$/webapps/convert/src/main/java/com/yunzai/convert/web/ConvertController.java" />
      <jump line="29" column="12" filename="$USER_HOME$/webapps/convert/src/main/java/com/yunzai/convert/web/Up.java" />
      <jump line="117" column="27" filename="$USER_HOME$/data/code/plugins-notice/notice-web/src/main/webapp/resources/js/forworkflow/notice/NoticeFormWin.js" />
      <jump line="158" column="29" filename="$USER_HOME$/data/code/online-classroom/online-classroom-core/src/main/java/com/yunzainfo/oa/onlineclassroom/service/impl/HomeworkTeaServiceImpl.java" />
      <jump line="185" column="58" filename="$USER_HOME$/data/code/online-classroom/online-classroom-core/src/test/java/com/yunzai/test/AttTest.java" />
      <jump line="215" column="17" filename="$USER_HOME$/data/code/online-classroom/online-classroom-core/src/test/java/com/yunzai/test/AttTest.java" />
      <jump line="5" column="45" filename="$USER_HOME$/webapps/plugins-resource/resourcec-impl/src/main/resources/sqlMap/oracle/CourseTrainingMapper.xml" />
      <jump line="11" column="65" filename="$USER_HOME$/webapps/plugins-resource/resourcec-impl/src/main/resources/sqlMap/oracle/MajorTeacherMapper.xml" />
      <jump line="802" column="76" filename="$USER_HOME$/data/code/online-classroom/online-classroom-core/src/main/java/com/yunzainfo/oa/onlineclassroom/service/impl/BaseScheduleServiceImpl.java" />
      <jump line="661" column="61" filename="$USER_HOME$/data/code/online-classroom/online-classroom-core/src/main/java/com/yunzainfo/oa/onlineclassroom/service/impl/BaseScheduleServiceImpl.java" />
      <jump line="35" column="21" filename="$USER_HOME$/data/code/video-library/src/main/java/com/yunzainfo/cloud/vlib/entity/FileStorage.java" />
      <jump line="49" column="30" filename="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/config/YunzaiFeignConfiguration.java" />
      <jump line="41" column="4" filename="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/config/YunzaiRedisTokenStore.java" />
      <jump line="192" column="4" filename="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/config/YunzaiRedisTokenStore.java" />
      <jump line="284" column="54" filename="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/config/YunzaiRedisTokenStore.java" />
      <jump line="88" column="4" filename="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/util/AspectUtil.java" />
      <jump line="84" column="35" filename="$USER_HOME$/data/code/cloud/common/src/main/java/com/yunzainfo/cloud/common/util/AspectUtil.java" />
      <jump line="20" column="21" filename="$USER_HOME$/data/code/react-auth/src/models/user.js" />
      <jump line="59" column="18" filename="$USER_HOME$/data/code/react-auth/src/pages/Video/Me.js" />
      <jump line="671" column="27" filename="$USER_HOME$/data/code/react-auth/src/pages/Video/Me.js" />
      <jump line="149" column="34" filename="$USER_HOME$/data/code/react-auth/src/pages/Video/Me.js" />
      <jump line="172" column="52" filename="$USER_HOME$/data/code/video-library/src/main/java/com/yunzainfo/cloud/vlib/service/impl/AliyunFileServiceImpl.java" />
      <jump line="449" column="31" filename="$USER_HOME$/data/code/react-auth/src/pages/Video/Admin.js" />
      <jump line="10" column="0" filename="$USER_HOME$/data/code/react-auth/src/services/video/admin.js" />
      <jump line="64" column="22" filename="$USER_HOME$/data/code/react-auth/src/pages/Video/Admin.js" />
      <jump line="23" column="17" filename="$USER_HOME$/data/code/video-library/src/main/java/com/yunzainfo/cloud/vlib/repository/DeleteCallRepository.java" />
      <jump line="72" column="49" filename="$USER_HOME$/data/code/video-library/src/main/java/com/yunzainfo/cloud/vlib/service/FileService.java" />
      <jump line="67" column="79" filename="$USER_HOME$/data/code/video-library/src/main/java/com/yunzainfo/cloud/vlib/web/FileAppController.java" />
      <jump line="350" column="28" filename="$USER_HOME$/data/code/react-auth/src/pages/Base/Client.js" />
      <jump line="71" column="8" filename="$USER_HOME$/data/code/react-auth/src/pages/Base/Client.js" />
      <jump line="329" column="16" filename="$USER_HOME$/data/code/react-auth/src/pages/Istio/Pods.js" />
      <jump line="76" column="21" filename="$USER_HOME$/data/code/react-auth/src/pages/Istio/Pods.js" />
      <jump line="68" column="46" filename="$USER_HOME$/data/code/sailor/src/test/java/PromeqlTest.java" />
      <jump line="222" column="15" filename="$USER_HOME$/data/code/react-auth/src/pages/Istio/Panel.js" />
      <jump line="235" column="14" filename="$USER_HOME$/data/code/react-auth/src/pages/Istio/Panel.js" />
      <jump line="50" column="38" filename="$USER_HOME$/data/code/react-auth/src/pages/Istio/Panel.js" />
      <jump line="326" column="15" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/RoleGroup.js" />
      <jump line="332" column="2" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/RoleGroup.js" />
      <jump line="318" column="22" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/RoleGroup.js" />
      <jump line="822" column="10" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/RoleGroup.js" />
      <jump line="774" column="27" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="775" column="0" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="525" column="20" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="25" column="51" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="781" column="28" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="30" column="9" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="28" column="56" filename="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/service/impl/RoleUserDeptServiceImpl.java" />
      <jump line="13" column="0" filename="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/service/impl/RoleUserDeptServiceImpl.java" />
      <jump line="269" column="1" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="575" column="29" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="214" column="26" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="35" column="29" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="24" column="0" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="8" column="2" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="0" column="0" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="104" column="32" filename="$USER_HOME$/data/code/react-auth/src/pages/Sys/Role.js" />
      <jump line="217" column="58" filename="$USER_HOME$/data/code/Sche/src/main/java/com/xucheng/schedule/timetable/Timetable.java" />
      <jump line="102" column="121" filename="$USER_HOME$/data/code/Sche/src/main/java/com/xucheng/schedule/web/UserController.java" />
      <jump line="114" column="69" filename="$USER_HOME$/data/code/react-auth/src/pages/Panel/ChartPanel.js" />
      <jump line="60" column="19" filename="$USER_HOME$/data/code/react-auth/src/pages/Base/Panel.js" />
      <jump line="79" column="16" filename="$USER_HOME$/data/code/react-auth/src/layouts/LoadingPage.js" />
      <jump line="238" column="25" filename="$USER_HOME$/data/code/react-auth/src/pages/Istio/Panel.js" />
      <jump line="154" column="19" filename="$USER_HOME$/data/code/cloud/auth-center/src/main/java/com/yunzainfo/cloud/auth/service/impl/BaseRoleServiceImpl.java" />
      <jump line="48" column="23" filename="$USER_HOME$/data/code/react-auth/src/pages/Task/CardList.js" />
      <jump line="43" column="24" filename="$USER_HOME$/data/code/react-auth/src/pages/Task/CardList.js" />
      <jump line="70" column="35" filename="$USER_HOME$/data/code/react-auth/src/pages/Task/CardList.js" />
      <jump line="102" column="3" filename="$USER_HOME$/data/code/react-auth/src/pages/Task/History.js" />
      <jump line="8" column="22" filename="$USER_HOME$/data/code/flowable/flowable-modeler/src/main/java/flowable/modeler/FlowableModelerApplication.java" />
      <jump line="646" column="36" filename="$MAVEN_REPOSITORY$/org/flowable/flowable-engine/6.4.1/flowable-engine-6.4.1.jar!/org/flowable/engine/impl/cfg/ProcessEngineConfigurationImpl.class" />
      <jump line="20" column="70" filename="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/CeleteProcessInstanceCacadeCmd.java" />
      <jump line="7" column="0" filename="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/CeleteProcessInstanceCacadeCmd.java" />
      <jump line="317" column="3" filename="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/RuntimeTaskHistoryServiceTest.java" />
      <jump line="332" column="5" filename="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/RuntimeTaskHistoryServiceTest.java" />
      <jump line="276" column="20" filename="$USER_HOME$/data/code/flowable/flowable-modeler/src/test/java/com/yunzainfo/cloud/flowable/test/TaskGatewayServiceTest.java" />
      <jump line="114" column="4" filename="$USER_HOME$/data/code/react-auth/src/models/formbuilder.js" />
      <jump line="110" column="67" filename="$USER_HOME$/data/code/react-auth/src/pages/FormBuilder/Toolbar.jsx" />
      <jump line="136" column="15" filename="$USER_HOME$/data/code/react-auth/src/pages/Flow/FormData.js" />
      <jump line="64" column="18" filename="$USER_HOME$/data/code/react-auth/src/pages/Flow/FlowDesign.js" />
      <jump line="77" column="10" filename="$USER_HOME$/data/code/flowengine/flowable-engine/flowable/src/main/java/com/yunzainfo/cloud/flowable/service/impl/ActProcessTypeServiceImpl.java" />
      <jump line="14" column="73" filename="$USER_HOME$/data/code/flowengine/flowable-engine/flowable/src/main/java/com/yunzainfo/cloud/flowable/FlowableApplication.java" />
      <jump line="235" column="15" filename="$USER_HOME$/data/code/react-auth/src/pages/Task/Initiate.js" />
      <jump line="117" column="10" filename="$USER_HOME$/data/code/react-auth/src/pages/FormBuilder/rjsf-patch/widgets/FileWidget.js" />
      <jump line="67" column="27" filename="$USER_HOME$/data/code/react-auth/src/pages/Flow/FlowSetting.js" />
      <jump line="66" column="6" filename="$USER_HOME$/data/code/react-auth/src/pages/Flow/FlowSetting.js" />
      <jump line="528" column="80" filename="$USER_HOME$/data/code/react-auth/src/pages/Flow/FlowSetting.js" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text>{&quot;name&quot;:&quot;张三&quot;,&quot;sex&quot;:18}</text>
      </register>
      <register name="c" type="4">
        <text>msg</text>
      </register>
      <register name="d" type="4">
        <text />
      </register>
      <register name="i" type="4">
        <keys>
          <key char="103" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="65535" code="8" mods="0" />
          <key char="27969" code="0" mods="0" />
          <key char="31243" code="0" mods="0" />
          <key char="21457" code="0" mods="0" />
          <key char="36215" code="0" mods="0" />
          <key char="20154" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="20219" code="0" mods="0" />
          <key char="21153" code="0" mods="0" />
          <key char="21019" code="0" mods="0" />
          <key char="24314" code="0" mods="0" />
          <key char="26102" code="0" mods="0" />
          <key char="38388" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
        </keys>
      </register>
      <register name="*" type="4">
        <text />
      </register>
      <register name="-" type="4">
        <text>depts</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDwiXD4=</text>
      </register>
      <register name="0" type="4">
        <text encoding="base64"></text>
      </register>
      <register name="1" type="4">
        <text encoding="base64">IHsKICAgICAgICAgIHZhbHVlLm1hcChpID0+CgogICAgICAgICAgICAgIDxUYWcgc3R5bGU9e3toZWlnaHQ6JzI3cHgnfX0gY29sb3I9JyNmMWU2ZTY3ZCc+CiAgICAgICAgICAgICAgPFRhZyBrZXk9e2kua2V5ICsgJy10YWcnfSBzdHlsZT17e2hlaWdodDonMjNweCd9fSAgY29sb3I9IiMxMDhlZTkiPntpLm5hbWV9PC9UYWc+CiAgICAgICAgICAgICAgPFNlbGVjdAogICAgICAgICAgICAgICAga2V5PXtpLmtleSArICctc2VsZWN0J30KICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17aS5wZXJtaXNzaW9ufQogICAgICAgICAgICAgICAgc2l6ZT17J3NtYWxsJ30KICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX0KICAgICAgICAgICAgICAgIHN0eWxlPXt7d2lkdGg6ICc2NXB4JyxtYXJnaW5MZWZ0OictOHB4J319CiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPE9wdGlvbiBrZXk9e2kua2V5ICsgJy13cml0ZSd9IHZhbHVlPSJ3cml0ZSI+5Y+v5YaZPC9PcHRpb24+CiAgICAgICAgICAgICAgICA8T3B0aW9uIGtleT17aS5rZXkgKyAnLWRpc2FibGVkJ30gdmFsdWU9ImRpc2FibGVkIj7lj6ror7s8L09wdGlvbj4KICAgICAgICAgICAgICAgIDxPcHRpb24ga2V5PXtpLmtleSArICctaGlkZGVuJ30gdmFsdWU9ImhpZGRlbiI+6ZqQ6JePPC9PcHRpb24+CiAgICAgICAgICAgICAgPC9TZWxlY3Q+CiAgICAgICAgICAgICAgPC9UYWc+CgogICAgICAgICAgKQogICAgICAgIH0=</text>
      </register>
      <register name="q" type="4">
        <text />
      </register>
      <register name="2" type="4">
        <text encoding="base64">IDxTZWxlY3QKICAgICAgICAgICAgICBtb2RlPSJtdWx0aXBsZSIKICAgICAgICAgICAgICBzdHlsZT17e3dpZHRoOiAnMTAwJSd9fQogICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSLpgInmi6nlvoXpgInpg6jpl6giCiAgICAgICAgICAgICAgb3B0aW9uTGFiZWxQcm9wPSJsYWJlbCIKICAgICAgICAgICAgICBmaWx0ZXJPcHRpb249eyhpbnB1dCwgb3B0aW9uKSA9PgogICAgICAgICAgICAgICAgb3B0aW9uLnByb3BzLmNoaWxkcmVuLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihpbnB1dC50b0xvd2VyQ2FzZSgpKSA+PSAwCiAgICAgICAgICAgICAgfQogICAgICAgICAgICA+</text>
      </register>
      <register name="3" type="4">
        <text encoding="base64">ICAgICAgICA8Rm9ybUl0ZW0ga2V5PXtcJ3JvbGVzXCd9IGxhYmVsQ29sPXt7c3BhbjogM319IHdyYXBwZXJDb2w9e3tzcGFuOiAyMH19IGxhYmVsPSLlvoXpgInop5LoibIiPlxuJyArCiAgICAgICAgJyAgICAgICAgICB7Zm9ybS5nZXRGaWVsZERlY29yYXRvcihcJ3JvbGVzXCcsIHtcbicgKwogICAgICAgICcgICAgICAgICAgICBpbml0aWFsVmFsdWU6IGkucHJvcGVydGllcy5wcm9jZXNzX2dsb2JlbHNldHRpbmdzID8gaS5wcm9wZXJ0aWVzLnByb2Nlc3NfZ2xvYmVsc2V0dGluZ3Mucm9sZXMgOiBbXSxcbicgKwogICAgICAgICcgICAgICAgICAgICBydWxlczogW3tyZXF1aXJlZDogdGhpcy5zdGFydEZvcm1QZXJtaXNzaW9uc1JlcXVpcmUoKSwgbWVzc2FnZTogXCfor7fpgInmi6nlvoXpgInop5LoibJcJ31dLFxuJyArCiAgICAgICAgJyAgICAgICAgICB9KShcbicgKwogICAgICAgICcgICAgICAgICAgICA8U2VsZWN0XG4nICsKICAgICAgICAnICAgICAgICAgICAgICBtb2RlPSJtdWx0aXBsZSJcbicgKwogICAgICAgICcgICAgICAgICAgICAgIHN0eWxlPXt7d2lkdGg6IFwnMTAwJVwnfX1cbicgKwogICAgICAgICcgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSLpgInmi6nlvoXpgInop5LoibIiXG4nICsKICAgICAgICAnICAgICAgICAgICAgICBvcHRpb25MYWJlbFByb3A9ImxhYmVsIlxuJyArCiAgICAgICAgJyAgICAgICAgICAgICAgZmlsdGVyT3B0aW9uPXsoaW5wdXQsIG9wdGlvbikgPT5cbicgKwogICAgICAgICcgICAgICAgICAgICAgICAgb3B0aW9uLnByb3BzLmNoaWxkcmVuLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihpbnB1dC50b0xvd2VyQ2FzZSgpKSA+PSAwXG4nICsKICAgICAgICAnICAgICAgICAgICAgICB9XG4nICsKICAgICAgICAnICAgICAgICAgICAgPlxuJyArCiAgICAgICAgJyAgICAgICAgICAgICAge3JvbGVzLm1hcChpdGVtID0+IChcbicgKwogICAgICAgICcgICAgICAgICAgICAgICAgPE9wdGlvbiBrZXk9e2l0ZW0uaWR9IGxhYmVsPXtpdGVtLnJvbGVOYW1lfT5cbicgKwogICAgICAgICcgICAgICAgICAgICAgICAgICB7aXRlbS5yb2xlTmFtZX1cbicgKwogICAgICAgICcgICAgICAgICAgICAgICAgPC9PcHRpb24+XG4nICsKICAgICAgICAnICAgICAgICAgICAgICApKX1cbicgKwogICAgICAgICcgICAgICAgICAgICA8L1NlbGVjdD5cbicgKwogICAgICAgICcgICAgICAgICAgKX1cbicgKwogICAgICAgICcgICAgICAgIDwvRm9ybUl0ZW0+LFxu</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">c3ByaW5nLnNlc3Npb24uc3RvcmUtdHlwZT1yZWRpcwo=</text>
      </register>
      <register name="5" type="4">
        <text encoding="base64">IGNvbnN0IHtpbmZvfSA9IHRoaXMuc3RhdGU7CiAgICBpZiAoaW5mbykgewogICAgICByZXR1cm4gaW5mbzsKICAgIH0=</text>
      </register>
      <register name="6" type="4">
        <text encoding="base64">IGNvbnN0IHtpbmZvfSA9IHRoaXMuc3RhdGU7CiAgICAvLyBpZiAoaW5mbykgewogICAgLy8gICByZXR1cm4gaW5mbzsKICAgIC8vIH0=</text>
      </register>
      <register name="7" type="4">
        <text encoding="base64">cHVibGljIHN0YXRpYyBKU09OT2JqZWN0IGdldFByb2Nlc3NHbG9iZWxTZXR0aW5nc0J5UHJvY2Vzc0luc3RhbmNlSWQoUmVwb3NpdG9yeVNlcnZpY2UgcmVwb3NpdG9yeVNlcnZpY2UsU3RyaW5nIGlkKXsKICAgICAgICAKICAgICAgICByZXBvc2l0b3J5U2VydmljZS5nZQogICAgICAgIAogICAgICAgIEpTT05PYmplY3QganNvbk9iamVjdD1uZXcgSlNPTk9iamVjdCgpOwogICAgICAgIEJwbW5Nb2RlbCBicG1uTW9kZWwgPSByZXBvc2l0b3J5U2VydmljZS5nZXRCcG1uTW9kZWwoaWQpOwogICAgICAgIFByb2Nlc3MgbWFpblByb2Nlc3MgPSBicG1uTW9kZWwuZ2V0TWFpblByb2Nlc3MoKTsKICAgICAgICBTdHJpbmcgcHJvY2Vzc0dsb2JlbFNldHRpbmdzID0gInByb2Nlc3NHbG9iZWxTZXR0aW5ncyI7CiAgICAgICAgTGlzdDxFeHRlbnNpb25FbGVtZW50PiBleHRlbnNpb25FbGVtZW50cyA9IG1haW5Qcm9jZXNzLmdldEV4dGVuc2lvbkVsZW1lbnRzKCkuZ2V0KHByb2Nlc3NHbG9iZWxTZXR0aW5ncyk7CiAgICAgICAgaWYoZXh0ZW5zaW9uRWxlbWVudHMhPW51bGwmJighZXh0ZW5zaW9uRWxlbWVudHMuaXNFbXB0eSgpKSl7CiAgICAgICAgICAgIEV4dGVuc2lvbkVsZW1lbnQgZXh0ZW5zaW9uRWxlbWVudCA9IGV4dGVuc2lvbkVsZW1lbnRzLmdldCgwKTsKICAgICAgICAgICAgU3RyaW5nIGVsZW1lbnRUZXh0ID0gZXh0ZW5zaW9uRWxlbWVudC5nZXRFbGVtZW50VGV4dCgpOwogICAgICAgICAgICBqc29uT2JqZWN0ID0gSlNPTi5wYXJzZU9iamVjdChlbGVtZW50VGV4dCk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBqc29uT2JqZWN0OwogICAgfQ==</text>
      </register>
      <register name="8" type="4">
        <text encoding="base64">IHtsYWJlbDogJ+WQr+WKqOa1geeoiycsIHZhbHVlOiAnc3RhcnQnfSwKICAgIHtsYWJlbDogJ+i9rOS6pOaMh+WumuS6uuWRmCcsIHZhbHVlOiAnc2V0TmV4dFVzZXInfSwKICAgIHtsYWJlbDogJ+S4tOaXtuWKoOetvicsIHZhbHVlOiAnYWRkJ30sCiAgICB7bGFiZWw6ICflrozmiJAnLCB2YWx1ZTogJ25leHQnfSwKICAgIHtsYWJlbDogJ+mps+WbnicsIHZhbHVlOiAncmVqZWN0ZWQnfSwKICAgIHtsYWJlbDogJ+iHquWumuS5iemps+WbnicsIHZhbHVlOiAncmVqZWN0ZWRCeVNlbGVjdCd9LAogICAge2xhYmVsOiAn5YWz5rOo5rWB56iLJywgdmFsdWU6ICdmb2N1cyd9LAogICAge2xhYmVsOiAn5Y6G5Y+y6K6w5b2VJywgdmFsdWU6ICdoaXN0b3J5J30sCiAgICB7bGFiZWw6ICfmtYHnqIvlm74nLCB2YWx1ZTogJ2ltYWdlJ30=</text>
      </register>
      <register name="9" type="4">
        <text>for (String i : keySet) {
                    settings.getJSONObject()



            }</text>
      </register>
      <register name=":" type="4">
        <text>290</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDwiXD4=</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDwiXD4=</last-pattern>
      <last-dir>-1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>state</entry>
        <entry>render</entry>
        <entry encoding="base64">XDxjb21wbGV0ZVw+</entry>
        <entry encoding="base64">XDwiXD4=</entry>
      </history-search>
      <history-cmd>
        <entry>mark</entry>
        <entry>marks</entry>
        <entry>action SearchEverywhere</entry>
        <entry>w</entry>
        <entry>600</entry>
        <entry>wq</entry>
        <entry>54</entry>
        <entry>74</entry>
        <entry>582</entry>
        <entry>action Find</entry>
        <entry>290</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed L</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
    </shortcut-conflicts>
    <editor>
      <key-repeat enabled="true" />
    </editor>
  </component>
</application>